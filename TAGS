
./Setup.hs,52
module Main Main0,1
main main4,5
main main5,6

./app/Main.hs,52
module Main Main0,1
main main4,5
main main5,6

./src/Tush/Compile/LLVM/CodeGen.hs,4224
module Tush.Compile.LLVM.CodeGen Tush.Compile.LLVM.CodeGen5,6
type SymbolTable SymbolTable34,35
type Names Names35,36
data CodeGenState CodeGenState37,38
data CodeGenState = CodeGenState CodeGenState37,38
    currentBlock currentBlock38,39
  , blocks blocks39,40
  , symtab symtab40,41
  , blockCount blockCount41,42
  , count count42,43
  , names names43,44
data BlockState BlockState46,47
data BlockState = BlockState BlockState46,47
    idx idx47,48
  , stack stack48,49
  , term term49,50
newtype CodeGen CodeGen52,53
newtype CodeGen a = CodeGen CodeGen52,53
newtype CodeGen a = CodeGen { runCodeGen runCodeGen52,53
newtype LLVM LLVM55,56
newtype LLVM a = LLVM LLVM55,56
data BlockHasNoTerminatorException BlockHasNoTerminatorException58,59
data BlockHasNoTerminatorException = BlockHasNoTerminatorException BlockHasNoTerminatorException58,59
entryBlockName entryBlockName64,65
entryBlockName entryBlockName65,66
emptyBlock emptyBlock67,68
emptyBlock emptyBlock68,69
sortBlocks sortBlocks74,75
sortBlocks sortBlocks75,76
createBlocks createBlocks77,78
createBlocks createBlocks78,79
makeBlock makeBlock80,81
makeBlock makeBlock81,82
double double88,89
double double89,90
int int91,92
int int92,93
boolean boolean94,95
boolean boolean95,96
emptyCodeGen emptyCodeGen99,100
emptyCodeGen emptyCodeGen100,101
execCodeGen execCodeGen102,103
execCodeGen execCodeGen103,104
runLLVM runLLVM107,108
runLLVM runLLVM108,109
emptyModule emptyModule110,111
emptyModule emptyModule111,112
entry entry113,114
entry entry114,115
addBlock addBlock117,118
addBlock addBlock118,119
setBlock setBlock130,131
setBlock setBlock131,132
getBlock getBlock135,136
getBlock getBlock136,137
modifyBlock modifyBlock138,139
modifyBlock modifyBlock139,140
current current143,144
current current144,145
fresh fresh151,152
fresh fresh152,153
addDefn addDefn159,160
addDefn addDefn160,161
define define164,165
define define165,166
external external173,174
external external174,175
uniqueName uniqueName185,186
uniqueName uniqueName186,187
local local191,192
local local192,193
localDouble localDouble194,195
localDouble localDouble195,196
localInt localInt197,198
localInt localInt198,199
localBoolean localBoolean200,201
localBoolean localBoolean201,202
localV localV203,204
localV localV204,205
constant constant209,210
constant constant210,211
uitofp uitofp212,213
uitofp uitofp213,214
externf externf215,216
externf externf216,217
assign assign218,219
assign assign219,220
getVar getVar223,224
getVar getVar224,225
instr instr230,231
instr instr231,232
terminator terminator239,240
terminator terminator240,241
fadd fadd247,248
fadd fadd248,249
add add250,251
add add251,252
fsub fsub253,254
fsub fsub254,255
sub sub256,257
sub sub257,258
fmul fmul259,260
fmul fmul260,261
mul mul262,263
mul mul263,264
fdiv fdiv265,266
fdiv fdiv266,267
div div268,269
div div269,270
fcmp fcmp271,272
fcmp fcmp272,273
icmp icmp274,275
icmp icmp275,276
flt flt277,278
flt flt278,279
lt lt280,281
lt lt281,282
br br285,286
br br286,287
cbr cbr288,289
cbr cbr289,290
ret ret291,292
ret ret292,293
toArg toArg294,295
toArg toArg295,296
call call297,298
call call298,299
alloca alloca302,303
alloca alloca303,304
store store305,306
store store306,307
load load308,309
load load309,310
codeGenTop codeGenTop313,314
codeGenTop codeGenTop314,315
varToName varToName339,340
varToName varToName340,341
textToSBS textToSBS342,343
textToSBS textToSBS343,344
toSig toSig345,346
toSig toSig346,347
builtinTypeToType builtinTypeToType348,349
builtinTypeToType builtinTypeToType349,350
dispatchBinOp dispatchBinOp354,355
dispatchBinOp dispatchBinOp355,356
staticDispatch staticDispatch357,358
staticDispatch staticDispatch358,359
false false384,385
false false385,386
cgen cgen387,388
cgen cgen388,389
zero zero445,446
zero zero446,447
phi phi448,449
phi phi449,450
liftError liftError451,452
liftError liftError452,453
codeGen codeGen454,455
codeGen codeGen455,456

./src/Tush/Compile/LLVM/JIT.hs,200
module Tush.Compile.LLVM.JIT Tush.Compile.LLVM.JIT4,5
runJIT runJIT21,22
runJIT runJIT22,23
jit jit46,47
jit jit47,48
run run54,55
run run55,56
passes passes57,58
passes passes58,59

./src/Tush/Compile/LLVM/Mangle.hs,150
module Tush.Compile.LLVM.Mangle Tush.Compile.LLVM.Mangle3,4
mangle mangle7,8
mangle mangle8,9
demangle demangle10,11
demangle demangle11,12

./src/Tush/Env/Global.hs,281
module Tush.Env.Global Tush.Env.Global3,4
binop binop9,10
binop binop10,11
add add12,13
add add13,14
sub sub15,16
sub sub16,17
mul mul18,19
mul mul19,20
div div21,22
div div22,23
lt lt24,25
lt lt25,26
globals globals27,28
bintrinsics bintrinsics29,30

./src/Tush/Syntax/Statement.hs,334
module Tush.Parse.Statement Tush.Parse.Statement2,3
exprS exprS15,16
exprS exprS16,17
definitionS definitionS21,22
definitionS definitionS22,23
externS externS25,26
externS externS26,27
funcS funcS32,33
funcS funcS33,34
fProto fProto41,42
fProto fProto42,43
statement statement47,48
statement statement48,49

./src/Tush/Syntax/Expression.hs,457
module Tush.Parse.Expr Tush.Parse.Expr3,4
iLitE iLitE13,14
iLitE iLitE14,15
fLitE fLitE16,17
fLitE fLitE17,18
bLitE bLitE19,20
bLitE bLitE20,21
varE varE22,23
varE varE23,24
operatorE operatorE25,26
operatorE operatorE26,27
varCallE varCallE28,29
varCallE varCallE29,30
opCallE opCallE34,35
opCallE opCallE35,36
ifE ifE41,42
ifE ifE42,43
forE forE51,52
forE forE52,53
term term65,66
term term66,67
expr expr75,76

./src/Tush/Syntax/Parse.hs,578
module Tush.Syntax.Parse Tush.Syntax.Parse18,19
type TushParseError TushParseError32,33
type TushParser TushParser34,35
satisfy satisfy36,37
satisfy satisfy37,38
tokenP tokenP45,46
tokenP tokenP46,47
varP varP48,49
varP varP49,50
typeAsP typeAsP53,54
typeAsP typeAsP54,55
typeP typeP58,59
typeP typeP59,60
typedVarP typedVarP62,63
typedVarP typedVarP63,64
openParenP openParenP69,70
openParenP openParenP70,71
commaP commaP74,75
commaP commaP75,76
fProtoP fProtoP79,80
fProtoP fProtoP80,81
externS externS88,89
externS externS89,90

./src/Tush/Syntax/Lex.hs,622
module Tush.Syntax.Lex Tush.Syntax.Lex4,5
lexeme lexeme17,18
lexeme lexeme18,19
comment comment23,24
comment comment24,25
commentT commentT26,27
commentT commentT27,28
reserved reserved29,30
reserved reserved30,31
reservedWords reservedWords34,35
reservedWords reservedWords35,36
reservedPunctuation reservedPunctuation43,44
reservedPunctuation reservedPunctuation44,45
reservedOps reservedOps54,55
reservedOps reservedOps55,56
godT godT59,60
godT godT60,61
literalT literalT81,82
literalT literalT82,83
token token88,89
token token89,90
tokens tokens93,94
tokens tokens94,95

./src/Tush/Repl.hs,170
module Tush.Repl Tush.Repl5,6
process process18,19
process process19,20
initModule initModule34,35
initModule initModule35,36
repl repl40,41
repl repl41,42

./src/Tush/Typecheck.hs,2564
module Tush.Typecheck Tush.Typecheck10,11
type LocalTypes LocalTypes25,26
type Typecheck Typecheck26,27
type Typecheck types types26,27
type SimpleTypecheck SimpleTypecheck27,28
type SimpleTypecheck a a27,28
type LocationData LocationData28,29
data TypeError TypeError30,31
data TypeError = forall forall30,31
instance instance33,34
runSimpleTypecheck runSimpleTypecheck38,39
runSimpleTypecheck runSimpleTypecheck39,40
typeErrorToException typeErrorToException41,42
typeErrorToException typeErrorToException42,43
typeErrorFromException typeErrorFromException44,45
typeErrorFromException typeErrorFromException45,46
data VariableNotFound VariableNotFound49,50
data VariableNotFound = VariableNotFound VariableNotFound49,50
data VariableNotFound = VariableNotFound { vnfName vnfName49,50
                                         , vnfLocation vnfLocation50,51
data TypeMismatch TypeMismatch61,62
data TypeMismatch = TypeMismatch TypeMismatch61,62
data TypeMismatch = TypeMismatch { tmExpected tmExpected61,62
                                 , tmActual tmActual62,63
                                 , tmLocation tmLocation63,64
data InternalTypeCheckerError InternalTypeCheckerError76,77
data InternalTypeCheckerError = InternalTypeCheckerError InternalTypeCheckerError76,77
data InternalTypeCheckerError = InternalTypeCheckerError { itceMessage itceMessage76,77
                                                         , itceLocation itceLocation77,78
localTypes localTypes87,88
localTypes localTypes88,89
toText toText90,91
toText toText91,92
typecheckCall typecheckCall95,96
typecheckCall typecheckCall96,97
typecheckIf typecheckIf115,116
typecheckIf typecheckIf116,117
typecheckFor typecheckFor127,128
typecheckFor typecheckFor128,129
typecheck typecheck141,142
typecheck typecheck142,143
simpleTagE simpleTagE156,157
simpleTagE simpleTagE157,158
simpleTagS simpleTagS185,186
simpleTagS simpleTagS186,187
defaultEnv defaultEnv200,201
defaultEnv defaultEnv201,202
simplyTypedVarToLocalTypePair simplyTypedVarToLocalTypePair214,215
simplyTypedVarToLocalTypePair simplyTypedVarToLocalTypePair215,216
constructLocalTypesFromFProto constructLocalTypesFromFProto217,218
constructLocalTypesFromFProto constructLocalTypesFromFProto218,219
constructLocalTypesForFuncS constructLocalTypesForFuncS221,222
constructLocalTypesForFuncS constructLocalTypesForFuncS222,223
constructLocalTypes constructLocalTypes229,230
constructLocalTypes constructLocalTypes230,231

./src/Tush/Syntax.hs,4391
module Tush.Syntax Tush.Syntax4,5
data VarClass VarClass10,11
data VarClass = VClassNormalVClassNormal10,11
              | VClassOperatorVClassOperator11,12
              | VClassTypeVClassType12,13
data Var Var15,16
data Var a = Var Var15,16
data Var a = Var { varName varName15,16
                 , varType varType16,17
                 , varClass varClass17,18
type SimplyTypedVar SimplyTypedVar19,20
data ReservedWord ReservedWord23,24
data ReservedWord = ForFor23,24
                  | IfIf24,25
                  | ThenThen25,26
                  | ElseElse26,27
                  | InIn27,28
                  | LetLet28,29
                  | DefDef29,30
                  | ExternExtern30,31
data ReservedOp ReservedOp33,34
data ReservedOp = ArrowArrow33,34
                | EqualsEquals34,35
data ReservedPunctuation ReservedPunctuation37,38
data ReservedPunctuation = CommaComma37,38
                         | SemicolonSemicolon38,39
                         | ColonColon39,40
                         | OpenParenOpenParen40,41
                         | CloseParenCloseParen41,42
                         | OpenBraceOpenBrace42,43
                         | CloseBraceCloseBrace43,44
                         | OpenBracketOpenBracket44,45
                         | CloseBracketCloseBracket45,46
data Token Token48,49
data Token = CommentT CommentT48,49
           | ReservedWordT ReservedWordT49,50
           | ReservedOpT ReservedOpT50,51
           | ReservedPunctuationT ReservedPunctuationT51,52
           | VarT VarT52,53
           | TypeVarT TypeVarT53,54
           | LiteralT LiteralT54,55
           | TypeLiteralT TypeLiteralT55,56
isVarT isVarT58,59
isVarT isVarT59,60
isOpenParenT isOpenParenT62,63
isOpenParenT isOpenParenT63,64
isCommaT isCommaT66,67
isCommaT isCommaT67,68
isTypeAsT isTypeAsT70,71
isTypeAsT isTypeAsT71,72
data FProto FProto76,77
data FProto a = FProto FProto76,77
data FProto a = FProto { fProtoName fProtoName76,77
                       , fProtoArgs fProtoArgs77,78
data Literal Literal81,82
data Literal = ILit ILit81,82
             | FLit FLit82,83
             | BLit BLit83,84
data Expression Expression85,86
data Expression a = LitE LitE85,86
data Expression a = LitE { litELiteral litELiteral85,86
                         , litEInfo litEInfo86,87
                  | VarE VarE87,88
                  | VarE { varEVar varEVar87,88
                         , varEInfo varEInfo88,89
                  | CallE CallE89,90
                  | CallE { callEName callEName89,90
                          , callEArgs callEArgs90,91
                          , callEInfo callEInfo91,92
                  | IfE IfE93,94
                  | IfE { ifEConditional ifEConditional93,94
                        , ifEConsequent ifEConsequent94,95
                        , ifEAntecedent ifEAntecedent95,96
                        , ifEInfo ifEInfo96,97
                  | ForE ForE98,99
                  | ForE { forEVar forEVar98,99
                         , forEInitializer forEInitializer99,100
                         , forETerminator forETerminator100,101
                         , forEIncrementer forEIncrementer101,102
                         , forEExpression forEExpression102,103
                         , forEInfo forEInfo103,104
exprInfo exprInfo107,108
exprInfo exprInfo108,109
data Statement Statement114,115
data Statement a b = ExprS ExprS114,115
                   | FuncS FuncS115,116
                   | ExternS ExternS116,117
isExprS isExprS119,120
isExprS isExprS120,121
data Type Type123,124
data Type = TTypeLiteral TTypeLiteral123,124
          | TVar TVar124,125
data TypeLiteral TypeLiteral127,128
data TypeLiteral = TLBuiltinType TLBuiltinType127,128
                 | TLNamed TLNamed128,129
                 | TLUntypedTLUntyped129,130
type Kind Kind132,133
data BuiltinType BuiltinType134,135
data BuiltinType = BTIntBTInt134,135
                 | BTFloatBTFloat135,136
                 | BTBoolBTBool136,137
                 | BTLambda BTLambda137,138
                 | BTLambda { btLambdaReturnType btLambdaReturnType137,138
                            , btLambdaArgTypes btLambdaArgTypes138,139

./src/Lib.hs,70
module Lib Lib4,5
someFunc someFunc10,11
someFunc someFunc11,12

./test/Spec.hs,55
module Main Main0,1
main main9,10
main main10,11

./test/Tush/Parse/LexSpec.hs,96
module Tush.Parse.LexSpec Tush.Parse.LexSpec2,3
lexSpec lexSpec15,16
lexSpec lexSpec16,17

./test/Tush/Parse/ExprSpec.hs,102
module Tush.Parse.ExprSpec Tush.Parse.ExprSpec2,3
exprSpec exprSpec14,15
exprSpec exprSpec15,16

./test/Tush/Parse/ParseSpec.hs,108
module Tush.Parse.ParseSpec Tush.Parse.ParseSpec3,4
parseSpec parseSpec15,16
parseSpec parseSpec16,17

./test/Tush/Typecheck/TypecheckSpec.hs,140
module Tush.Typecheck.TypecheckSpec Tush.Typecheck.TypecheckSpec3,4
typecheckSpec typecheckSpec14,15
typecheckSpec typecheckSpec15,16
